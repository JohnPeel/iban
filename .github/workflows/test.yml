permissions:
  contents: read

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: test

jobs:
  required:
    runs-on: ubuntu-latest
    name: required / ${{ matrix.toolchain }}
    strategy:
      matrix:
        toolchain: [stable, beta]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - run: cargo test --locked --all-features --all-targets
      - run: cargo test --locked --all-features --doc
  minimal:
    runs-on: ubuntu-latest
    name: minimal-versions / stable
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - uses: dtolnay/rust-toolchain@nightly
      - run: rustup default stable
      - run: cargo +nightly update -Zdirect-minimal-versions
      - run: cargo test --locked --all-features --all-targets
  os-check:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / stable
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@stable
      - if: hashFiles('Cargo.lock') == ''
        run: cargo generate-lockfile
      - run: cargo test --locked --all-features --all-targets
  coverage:
    runs-on: ubuntu-latest
    name: coverage / stable
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: llvm-tools-preview
      - run: |
          release_url="$(curl \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/mozilla/grcov/releases | \
            jq -r '.[0].assets | map(select(.browser_download_url | test(".*x86_64-unknown-linux-musl.tar.bz2$"))) | .[0].browser_download_url')"

          curl -sL "$release_url" | sudo tar xvj -C /usr/local/bin/
      - run: cargo clean
      - run: cargo test --all-features --no-fail-fast
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-C instrument-coverage -C codegen-units=1"
          RUSTDOCFLAGS: "-C instrument-coverage -C codegen-units=1 -Z unstable-options --persist-doctests target/debug/doctests"
          LLVM_PROFILE_FILE: "target/coverage/raw/cargo-test-%p-%m.profraw"
      - run: grcov target/coverage/raw --source-dir . --binary-path target/debug --keep-only 'src/**/*.rs' --branch --ignore-not-existing -t markdown -o target/coverage/coverage.md
      - uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: target/coverage/coverage.md
      - run: grcov target/coverage/raw --source-dir . --binary-path target/debug --keep-only 'src/**/*.rs' --branch --ignore-not-existing -t lcov -o target/coverage/lcov.info
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/coverage/lcov.info
